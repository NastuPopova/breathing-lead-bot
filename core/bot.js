// –§–∞–π–ª: core/bot.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
const { Telegraf } = require('telegraf');
const config = require('../config');

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —è–¥—Ä–∞
const Handlers = require('./handlers');
const Middleware = require('./middleware');
const AdminIntegration = require('./admin_integration'); // –ù–û–í–û–ï

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
const ExtendedSurveyQuestions = require('../modules/survey/extended_questions');
const BreathingVERSEAnalysis = require('../modules/analysis/verse_analysis');
const LeadTransferSystem = require('../modules/integration/lead_transfer');
const ContentGenerator = require('../modules/bonus/content-generator');
const FileHandler = require('../modules/bonus/file-handler');
// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç AdminNotificationSystem
const AdminNotificationSystem = require('../modules/admin/notifications/notification_system');

class BreathingLeadBot {
  constructor() {
    console.log('ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BreathingLeadBot v2.7 —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é...');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Telegraf
    this.bot = new Telegraf(config.LEAD_BOT_TOKEN);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ —Å–∏—Å—Ç–µ–º—ã
    this.initializeModules();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —è–¥—Ä–∞
    this.initializeCore();
    
    // –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    this.initializeAdminPanel();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ—Ç–∞
    this.setupBot();
    
    console.log('‚úÖ BreathingLeadBot —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
  initializeModules() {
    try {
      console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã...');
      
      // –ú–æ–¥—É–ª—å –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      this.surveyQuestions = new ExtendedSurveyQuestions();
      console.log('‚úÖ ExtendedSurveyQuestions –∑–∞–≥—Ä—É–∂–µ–Ω');
      
      // –ú–æ–¥—É–ª—å VERSE-–∞–Ω–∞–ª–∏–∑–∞
      this.verseAnalysis = new BreathingVERSEAnalysis();
      console.log('‚úÖ BreathingVERSEAnalysis –∑–∞–≥—Ä—É–∂–µ–Ω');
      
      // –ú–æ–¥—É–ª—å –ø–µ—Ä–µ–¥–∞—á–∏ –ª–∏–¥–æ–≤
      this.leadTransfer = new LeadTransferSystem();
      console.log('‚úÖ LeadTransferSystem –∑–∞–≥—Ä—É–∂–µ–Ω');
      
      // PDF –º–æ–¥—É–ª–∏
      this.contentGenerator = new ContentGenerator();
      this.fileHandler = new FileHandler(this.contentGenerator);
      this.pdfManager = this.fileHandler;
      console.log('‚úÖ ContentGenerator, FileHandler –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–æ–¥—É–ª—å –∞–¥–º–∏–Ω-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–ø–æ—Ä—Ç–æ–º
      this.adminNotifications = new AdminNotificationSystem(this);
      console.log('‚úÖ AdminNotificationSystem –∑–∞–≥—Ä—É–∂–µ–Ω');
      
      console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π:', error.message);
      console.error('–°—Ç–µ–∫:', error.stack);
      throw error;
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —è–¥—Ä–∞
  initializeCore() {
    try {
      console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —è–¥—Ä–∞...');
      
      // Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Å—Å–∏–π –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      this.middleware = new Middleware(this);
      console.log('‚úÖ Middleware –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ callback
      this.handlers = new Handlers(this);
      console.log('‚úÖ Handlers –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      
      console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —è–¥—Ä–∞ –≥–æ—Ç–æ–≤—ã');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è–¥—Ä–∞:', error.message);
      throw error;
    }
  }

  // –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
  initializeAdminPanel() {
    try {
      console.log('üéõÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...');
      
      // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      this.adminIntegration = new AdminIntegration(this);
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
      this.adminIntegration.initialize();
      
      console.log('‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≥–æ—Ç–æ–≤–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:', error.message);
      console.warn('‚ö†Ô∏è –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏');
      this.adminIntegration = null;
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
  setupBot() {
    try {
      console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞...');
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º middleware
      this.middleware.setup();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
      this.handlers.setup();
      
      // –ù–û–í–û–ï: –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–¥–º–∏–Ω-–∑–∞–¥–∞—á
      if (this.adminIntegration) {
        this.adminIntegration.startAdminScheduler();
      }
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
      this.setupErrorHandling();
      
      console.log('‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:', error.message);
      throw error;
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
  setupErrorHandling() {
    this.bot.catch(async (err, ctx) => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞:', {
        error: err.message,
        user_id: ctx.from?.id,
        timestamp: new Date().toISOString()
      });

      // –ù–û–í–û–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      if (this.adminIntegration) {
        await this.adminIntegration.sendEmergencyAlert(
          'system_error',
          `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞: ${err.message}`,
          {
            user_id: ctx.from?.id,
            error_stack: err.stack,
            context: ctx.message?.text || ctx.callbackQuery?.data
          }
        );
      }

      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      try {
        await ctx.reply(
          'üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ [–ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –ü–æ–ø–æ–≤–æ–π](https://t.me/NastuPopova)',
          { parse_mode: 'Markdown' }
        );
      } catch (replyError) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', replyError.message);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
    process.once('SIGINT', () => this.stop('SIGINT'));
    process.once('SIGTERM', () => this.stop('SIGTERM'));
  }

  // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
  async launch() {
    try {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
      this.validateConfiguration();
      
      // –ù–û–í–û–ï: –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
      if (this.adminIntegration) {
        const diagnostics = await this.adminIntegration.runDiagnostics();
        console.log(`üîß –ü—Ä–µ–¥—Å—Ç–∞—Ä—Ç–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ${diagnostics.overall_status}`);
        
        if (diagnostics.overall_status === 'ERROR') {
          console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ –∑–∞–ø—É—Å–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è');
        }
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º polling
      await this.bot.launch();
      
      console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log(`üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${config.NODE_ENV || 'development'}`);
      console.log(`üîó –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: ${config.MAIN_BOT_API_URL ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º'}`);
      console.log(`üë®‚Äçüíº –ê–¥–º–∏–Ω: ${config.ADMIN_ID ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
      console.log(`üéõÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: ${this.adminIntegration ? '–∞–∫—Ç–∏–≤–Ω–∞' : '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}`);
      
    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
      
      // –ù–û–í–û–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∑–∞–ø—É—Å–∫–∞
      if (this.adminIntegration) {
        await this.adminIntegration.sendEmergencyAlert(
          'system_error',
          `–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: ${error.message}`,
          { error_stack: error.stack }
        );
      }
      
      throw error;
    }
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
  async stop(reason = 'manual') {
    console.log(`üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞... (–ø—Ä–∏—á–∏–Ω–∞: ${reason})`);
    
    try {
      // –ù–û–í–û–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      if (this.adminIntegration) {
        await this.adminIntegration.shutdown();
      }
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º middleware
      if (this.middleware) {
        this.middleware.stop();
      }
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
      this.bot.stop(reason);
      
      console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞:', error);
    }
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  validateConfiguration() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    if (!config.LEAD_BOT_TOKEN) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: LEAD_BOT_TOKEN');
    }
    
    if (!config.MAIN_BOT_API_URL) {
      console.log('‚ÑπÔ∏è MAIN_BOT_API_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - —Ä–∞–±–æ—Ç–∞–µ–º –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ');
    }
    
    if (!config.ADMIN_ID) {
      console.warn('‚ö†Ô∏è ADMIN_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞');
    }
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞');
  }

  // –ù–û–í–û–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
  getBotInfo() {
    const baseInfo = {
      name: 'BreathingLeadBot',
      version: '2.7.0',
      status: 'running',
      uptime: process.uptime(),
      configuration: {
        main_bot_connected: !!config.MAIN_BOT_API_URL,
        crm_connected: !!config.CRM_WEBHOOK_URL,
        admin_configured: !!config.ADMIN_ID,
        environment: config.NODE_ENV || 'development',
        standalone_mode: !config.MAIN_BOT_API_URL
      },
      modules: {
        survey_questions: !!this.surveyQuestions,
        verse_analysis: !!this.verseAnalysis,
        lead_transfer: !!this.leadTransfer,
        pdf_manager: !!this.pdfManager,
        admin_notifications: !!this.adminNotifications,
        admin_integration: !!this.adminIntegration
      },
      last_updated: new Date().toISOString()
    };

    // –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –∞–¥–º–∏–Ω-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    if (this.adminIntegration) {
      baseInfo.admin_panel = this.adminIntegration.getIntegrationInfo();
      baseInfo.extended_stats = this.adminIntegration.getExtendedStats();
    }

    return baseInfo;
  }

  // –ù–û–í–û–ï: –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é
  async getAdminStats() {
    if (!this.adminIntegration) return null;
    return this.adminIntegration.getExtendedStats();
  }

  async createBackup() {
    if (!this.adminIntegration) return null;
    return this.adminIntegration.createBackup();
  }

  async runDiagnostics() {
    if (!this.adminIntegration) return null;
    return this.adminIntegration.runDiagnostics();
  }

  async cleanupOldData(days) {
    if (!this.adminIntegration) return null;
    return this.adminIntegration.cleanupOldData(days);
  }

  // –ù–û–í–û–ï: –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
  async sendAdminAlert(type, message, data = {}) {
    if (!this.adminIntegration) return false;
    await this.adminIntegration.sendEmergencyAlert(type, message, data);
    return true;
  }

  // –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
  async checkHealth() {
    const health = {
      bot_status: 'running',
      uptime: process.uptime(),
      memory: process.memoryUsage(),
      modules_loaded: Object.keys(this.modules || {}).length,
      admin_panel: this.adminIntegration ? 'active' : 'inactive',
      timestamp: new Date().toISOString()
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
    if (this.adminIntegration) {
      const diagnostics = await this.adminIntegration.runDiagnostics();
      health.diagnostics = diagnostics;
    }

    return health;
  }

  // –ù–û–í–û–ï: –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏—è–º –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
  getAdminPanel() {
    return this.adminIntegration;
  }

  // –ù–û–í–û–ï: –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ runtime
  async updateSettings(newSettings) {
    try {
      console.log('‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞...');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      if (this.adminIntegration && newSettings.notifications) {
        this.adminIntegration.adminPanel.notificationSettings = {
          ...this.adminIntegration.adminPanel.notificationSettings,
          ...newSettings.notifications
        };
      }
      
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      return { success: true };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      return { success: false, error: error.message };
    }
  }

  // –ù–û–í–û–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  getPerformanceStats() {
    return {
      uptime: process.uptime(),
      memory: process.memoryUsage(),
      cpu: process.cpuUsage(),
      timestamp: new Date().toISOString(),
      middleware_stats: this.middleware ? this.middleware.getStats() : null,
      admin_stats: this.adminIntegration ? this.adminIntegration.getExtendedStats() : null
    };
  }
}

module.exports = BreathingLeadBot;
