// –§–∞–π–ª: core/admin_integration.js - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø v5.0
// –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –º–æ–¥—É–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

const AdminHandlers = require('../modules/admin/admin_handlers');
const AdminCallbacks = require('../modules/admin/admin_callbacks');
const AdminNotificationSystem = require('../modules/admin/notifications/notification_system');
const config = require('../config');

class AdminIntegration {
  constructor(botInstance) {
    this.bot = botInstance;
    this.telegramBot = botInstance.bot;
    this.adminId = config.ADMIN_ID;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    this.adminNotifications = new AdminNotificationSystem(this.bot);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏
    this.verseAnalysis = botInstance.verseAnalysis;
    this.leadTransfer = botInstance.leadTransfer;
    this.pdfManager = botInstance.pdfManager;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    this.adminHandlers = null;
    this.adminCallbacks = null;
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    this.integrationStats = {
      initialized: false,
      startTime: new Date().toISOString(),
      totalAdminActions: 0,
      lastAction: null,
      errors: 0,
      moduleVersion: '5.0.0',
      architecture: 'modular_v3_with_notifications'
    };
  }

  // ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø =====

  initialize() {
    console.log('üéõÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—å–Ω–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ v5.0 —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏...');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º leadDataStorage
      if (!this.adminNotifications.leadDataStorage) {
        this.adminNotifications.leadDataStorage = {};
        console.log('‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø—É—Å—Ç–æ–µ leadDataStorage');
      }
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      this.createModularAdminComponents();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª–∏
      this.setupModularAdminComponents();
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
      this.startAdminScheduler();
      
      this.integrationStats.initialized = true;
      console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å v5.0 –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
      
      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª—è—Ö
      this.logModularArchitectureInfo();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ v5.0:', error);
      this.integrationStats.errors++;
      this.sendEmergencyAlert('system_error', '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ v5.0', { error: error.message });
    }
  }

  createModularAdminComponents() {
    console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ v5.0...');
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å–Ω—ã–π AdminHandlers
    this.adminHandlers = new AdminHandlers(
      this.bot,
      this.adminNotifications,
      this.verseAnalysis,
      this.leadTransfer,
      this.pdfManager
    );
    console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω—ã–π AdminHandlers —Å–æ–∑–¥–∞–Ω');
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å–Ω—ã–π AdminCallbacks
    this.adminCallbacks = new AdminCallbacks(
      this.adminHandlers,
      this.adminNotifications,
      this.verseAnalysis,
      this.leadTransfer
    );
    console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω—ã–π AdminCallbacks —Å–æ–∑–¥–∞–Ω');
    
    console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã');
  }

  setupModularAdminComponents() {
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (this.adminHandlers) {
      this.adminHandlers.setupCommands();
      console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å–Ω—ã–µ callbacks
    if (this.adminCallbacks) {
      this.adminCallbacks.setupCallbacks(this.telegramBot);
      console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω-callbacks –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
  }

  logModularArchitectureInfo() {
    console.log('üèóÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–û–î–£–õ–¨–ù–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–ï v5.0:');
    console.log('üìä Handlers –º–æ–¥—É–ª–∏:');
    console.log('   - MainHandler: –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã + —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏');
    console.log('   - StatsHandler: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞');
    console.log('   - LeadsHandler: —Ä–∞–±–æ—Ç–∞ —Å –ª–∏–¥–∞–º–∏');
    console.log('   - SystemHandler: —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏');
    console.log('üìã Callbacks –º–æ–¥—É–ª–∏:');
    console.log('   - NavigationCallbacks: –Ω–∞–≤–∏–≥–∞—Ü–∏—è + –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    console.log('   - StatsCallbacks: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
    console.log('   - LeadsCallbacks: –ª–∏–¥—ã');
    console.log('   - SystemCallbacks: —Å–∏—Å—Ç–µ–º–∞');
    console.log('üîî Notifications –º–æ–¥—É–ª–∏:');
    console.log('   - NotificationSystem: –æ—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å —Ä–µ–∂–∏–º–∞–º–∏');
    console.log('   - NotificationTemplates: —à–∞–±–ª–æ–Ω—ã');
    console.log('   - NotificationHandlers: –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
    console.log('   - NotificationFormatters: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
    console.log('   - NotificationAnalytics: –∞–Ω–∞–ª–∏—Ç–∏–∫–∞');
  }

  // ===== –û–°–ù–û–í–ù–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ê–î–ú–ò–ù-CALLBACK'–û–í =====

  async handleAdminCallback(ctx, callbackData) {
    if (!this.adminId) {
      await ctx.answerCbQuery('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
      return;
    }

    if (ctx.from.id.toString() !== this.adminId) {
      await ctx.answerCbQuery('üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    try {
      this.trackAdminAction(callbackData, ctx.from.id);
      
      console.log(`üîç Admin callback integration v5.0: ${callbackData}`);
      
      // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –º–æ–¥—É–ª—å–Ω—ã–π AdminCallbacks
      if (this.adminCallbacks) {
        await this.adminCallbacks.handleCallback(ctx, callbackData);
      } else {
        console.error('‚ùå –ú–æ–¥—É–ª—å–Ω—ã–π AdminCallbacks –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        await ctx.answerCbQuery('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ handleAdminCallback –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ v5.0:', error);
      this.integrationStats.errors++;
      
      await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      await this.sendEmergencyAlert('admin_error', `–û—à–∏–±–∫–∞ admin callback v5.0: ${error.message}`, {
        callback_data: callbackData,
        user_id: ctx.from.id,
        error_stack: error.stack,
        architecture: 'modular_v3_with_notifications'
      });
    }
  }

  // ===== –û–ë–†–ê–ë–û–¢–ö–ê –ê–î–ú–ò–ù-–ö–û–ú–ê–ù–î =====

  async handleAdminCommand(ctx, commandName) {
    if (!this.adminId) {
      await ctx.reply('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
      return;
    }

    if (ctx.from.id.toString() !== this.adminId) {
      await ctx.reply('üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    try {
      this.trackAdminAction(commandName, ctx.from.id);
      
      console.log(`üîç Admin command integration v5.0: ${commandName}`);
      
      // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –º–æ–¥—É–ª—å–Ω—ã–π AdminHandlers
      if (this.adminHandlers) {
        await this.adminHandlers.handleCommand(ctx, commandName);
      } else {
        console.error('‚ùå –ú–æ–¥—É–ª—å–Ω—ã–π AdminHandlers –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        await ctx.reply('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ handleAdminCommand –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ v5.0:', error);
      this.integrationStats.errors++;
      
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
      await this.sendEmergencyAlert('admin_error', `–û—à–∏–±–∫–∞ admin command v5.0: ${error.message}`, {
        command: commandName,
        user_id: ctx.from.id,
        error_stack: error.stack,
        architecture: 'modular_v3_with_notifications'
      });
    }
  }

  // ===== –ú–ï–¢–û–î–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô =====

  /**
   * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–º –ª–∏–¥–µ
   */
  async notifyNewLead(userData) {
    try {
      await this.adminNotifications.notifyNewLead(userData);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –ª–∏–¥–µ:', error);
      this.integrationStats.errors++;
    }
  }

  /**
   * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  async notifySurveyResults(userData) {
    try {
      await this.adminNotifications.notifySurveyResults(userData);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      this.integrationStats.errors++;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  getNotificationMode() {
    return this.adminNotifications?.getNotificationMode?.() || {
      mode: 'unknown',
      description: '–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
      emoji: '‚ùì'
    };
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  toggleNotificationMode() {
    try {
      return this.adminNotifications?.toggleNotificationMode?.() || null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      return null;
    }
  }

  // ===== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì =====

  async runDiagnostics() {
    const results = {
      timestamp: new Date().toISOString(),
      overall_status: 'UNKNOWN',
      version: '5.0.0',
      architecture: 'modular_v3_with_notifications',
      checks: {}
    };

    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
      results.checks.admin_integration = {
        status: this.integrationStats.initialized ? 'OK' : 'ERROR',
        message: `–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è v5.0 ${this.integrationStats.initialized ? '–∞–∫—Ç–∏–≤–Ω–∞' : '–Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞'}`
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      results.checks.modular_handlers = {
        status: (this.adminHandlers) ? 'OK' : 'ERROR',
        message: `–ú–æ–¥—É–ª—å–Ω—ã–µ Handlers: ${!!this.adminHandlers}`
      };

      results.checks.modular_callbacks = {
        status: (this.adminCallbacks) ? 'OK' : 'ERROR',
        message: `–ú–æ–¥—É–ª—å–Ω—ã–µ Callbacks: ${!!this.adminCallbacks}`
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      results.checks.notification_system = {
        status: (this.adminNotifications && this.adminNotifications.templates) ? 'OK' : 'ERROR',
        message: `–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${!!this.adminNotifications}, Templates: ${!!this.adminNotifications?.templates}`
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const notificationMode = this.getNotificationMode();
      results.checks.notification_modes = {
        status: notificationMode.mode !== 'unknown' ? 'OK' : 'WARNING',
        message: `–†–µ–∂–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${notificationMode.emoji} ${notificationMode.mode}`
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const leadsCount = Object.keys(this.adminNotifications.leadDataStorage || {}).length;
      results.checks.data_integrity = {
        status: 'OK',
        message: `–î–æ—Å—Ç—É–ø –∫ ${leadsCount} –ª–∏–¥–∞–º`
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      results.checks.configuration = {
        status: this.adminId ? 'OK' : 'WARNING',
        message: this.adminId ? 'ADMIN_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω' : 'ADMIN_ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
      const memUsage = process.memoryUsage();
      const memoryMB = Math.round(memUsage.heapUsed / 1024 / 1024);
      results.checks.memory = {
        status: memoryMB < 500 ? 'OK' : memoryMB < 1000 ? 'WARNING' : 'ERROR',
        message: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${memoryMB}MB –ø–∞–º—è—Ç–∏`
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const analytics = this.adminNotifications.analytics?.getStats();
      results.checks.notification_analytics = {
        status: analytics ? 'OK' : 'WARNING',
        message: analytics ? `–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${analytics.notifications?.totalSent || 0}` : '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
      const moduleCount = this.getModuleCount();
      results.checks.module_architecture = {
        status: moduleCount >= 13 ? 'OK' : 'WARNING',
        message: `–ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥—É–ª–µ–π: ${moduleCount}/13 –æ–∂–∏–¥–∞–µ–º—ã—Ö`
      };

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å
      const statuses = Object.values(results.checks).map(check => check.status);
      if (statuses.includes('ERROR')) {
        results.overall_status = 'ERROR';
      } else if (statuses.includes('WARNING')) {
        results.overall_status = 'WARNING';
      } else {
        results.overall_status = 'OK';
      }

    } catch (error) {
      results.overall_status = 'ERROR';
      results.error = error.message;
    }

    return results;
  }

  getModuleCount() {
    let count = 0;
    
    // –°—á–∏—Ç–∞–µ–º –º–æ–¥—É–ª–∏ handlers
    if (this.adminHandlers?.mainHandler) count++;
    if (this.adminHandlers?.statsHandler) count++;
    if (this.adminHandlers?.leadsHandler) count++;
    if (this.adminHandlers?.systemHandler) count++;
    
    // –°—á–∏—Ç–∞–µ–º –º–æ–¥—É–ª–∏ callbacks
    if (this.adminCallbacks?.navigationCallbacks) count++;
    if (this.adminCallbacks?.statsCallbacks) count++;
    if (this.adminCallbacks?.leadsCallbacks) count++;
    if (this.adminCallbacks?.systemCallbacks) count++;
    
    // –°—á–∏—Ç–∞–µ–º –º–æ–¥—É–ª–∏ notifications
    if (this.adminNotifications?.templates) count++;
    if (this.adminNotifications?.handlers) count++;
    if (this.adminNotifications?.formatters) count++;
    if (this.adminNotifications?.analytics) count++;
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if (this.adminNotifications) count++;
    
    return count;
  }

  async getSystemHealthOverview() {
    const baseHealth = {
      uptime: process.uptime(),
      memory_usage: process.memoryUsage(),
      cpu_usage: process.cpuUsage(),
      admin_panel_status: this.integrationStats.initialized ? 'active' : 'inactive',
      version: '5.0.0',
      architecture: 'modular_v3_with_notifications',
      integrations: {
        main_bot: !!config.MAIN_BOT_API_URL,
        crm: !!config.CRM_WEBHOOK_URL,
        database: !!config.DATABASE_URL
      }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
    baseHealth.modular_components = {
      handlers: {
        loaded: !!this.adminHandlers,
        modules: this.adminHandlers ? {
          main: !!this.adminHandlers.mainHandler,
          stats: !!this.adminHandlers.statsHandler,
          leads: !!this.adminHandlers.leadsHandler,
          system: !!this.adminHandlers.systemHandler
        } : null
      },
      callbacks: {
        loaded: !!this.adminCallbacks,
        modules: this.adminCallbacks ? {
          navigation: !!this.adminCallbacks.navigationCallbacks,
          stats: !!this.adminCallbacks.statsCallbacks,
          leads: !!this.adminCallbacks.leadsCallbacks,
          system: !!this.adminCallbacks.systemCallbacks
        } : null
      },
      notifications: {
        loaded: !!this.adminNotifications,
        current_mode: this.getNotificationMode(),
        modules: this.adminNotifications ? {
          templates: !!this.adminNotifications.templates,
          handlers: !!this.adminNotifications.handlers,
          formatters: !!this.adminNotifications.formatters,
          analytics: !!this.adminNotifications.analytics
        } : null
      }
    };

    return baseHealth;
  }

  // ===== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò –ê–ù–ê–õ–ò–¢–ò–ö–ê =====

  getExtendedStats() {
    const baseStats = this.adminNotifications?.getStats() || {};
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç –º–æ–¥—É–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const aggregatedHandlerStats = this.adminHandlers?.getAggregatedStats() || {};
    const aggregatedCallbackStats = this.adminCallbacks?.getCallbackStats() || {};
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const notificationAnalytics = this.adminNotifications?.analytics?.getDetailedAnalytics() || {};

    return {
      ...baseStats,
      admin_integration: this.integrationStats,
      
      // –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      modular_handlers: aggregatedHandlerStats,
      modular_callbacks: aggregatedCallbackStats,
      
      // –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      notification_analytics: notificationAnalytics,
      
      // –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
      system_health: this.getSystemHealthOverview(),
      
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
      architecture_info: {
        version: '5.0.0',
        type: 'modular_v3_with_notifications',
        total_modules: this.getModuleCount(),
        handlers_modules: 4,
        callbacks_modules: 4,
        notifications_modules: 5
      },
      
      timestamp: new Date().toISOString()
    };
  }

  trackAdminAction(action, userId) {
    this.integrationStats.totalAdminActions++;
    this.integrationStats.lastAction = {
      action: action,
      user_id: userId,
      timestamp: new Date().toISOString(),
      architecture: 'modular_v3_with_notifications'
    };
    
    console.log(`üìä Admin action tracked v5.0: ${action} by ${userId} (total: ${this.integrationStats.totalAdminActions})`);
  }

  // ===== –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –ò –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø =====

  startAdminScheduler() {
    console.log('‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–¥–º–∏–Ω-–∑–∞–¥–∞—á v5.0...');
    
    // –ï–∂–µ—á–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    setInterval(async () => {
      try {
        const diagnostics = await this.runDiagnostics();
        if (diagnostics.overall_status === 'ERROR') {
          await this.sendEmergencyAlert('system_error', '–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã v5.0', diagnostics);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ v5.0:', error);
      }
    }, 3600000); // –ö–∞–∂–¥—ã–π —á–∞—Å

    // –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–≤–æ–¥–∫–∏ –≤ 9:00
    setInterval(async () => {
      const now = new Date();
      if (now.getHours() === 9 && now.getMinutes() === 0) {
        await this.adminNotifications.sendDailySummary();
      }
    }, 60000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

    // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    setInterval(async () => {
      try {
        const cleanupResult = await this.cleanupOldData(30);
        console.log('üßπ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ v5.0:', cleanupResult);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ v5.0:', error);
      }
    }, 7 * 24 * 3600000); // –ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é

    console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–¥–º–∏–Ω-–∑–∞–¥–∞—á v5.0 –∑–∞–ø—É—â–µ–Ω');
  }

  // ===== –≠–ö–°–¢–†–ï–ù–ù–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø =====

  async sendEmergencyAlert(alertType, message, additionalData = {}) {
    if (!this.adminId) return;

    const alertEmojis = {
      'system_error': 'üö®',
      'admin_error': '‚ö†Ô∏è',
      'high_load': '‚ö°',
      'data_corruption': 'üí•',
      'security_issue': 'üõ°Ô∏è',
      'critical_lead': 'üî•',
      'module_error': 'üîß',
      'notification_error': 'üîî'
    };

    const emoji = alertEmojis[alertType] || '‚ö†Ô∏è';
    
    try {
      const alertMessage = `${emoji} *–≠–ö–°–¢–†–ï–ù–ù–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï v5.0*\n\n` +
        `**–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:** –ú–æ–¥—É–ª—å–Ω–∞—è v3 —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏\n` +
        `**–¢–∏–ø:** ${alertType}\n` +
        `**–°–æ–æ–±—â–µ–Ω–∏–µ:** ${message}\n\n` +
        `**–î–µ—Ç–∞–ª–∏:**\n\`\`\`\n${JSON.stringify(additionalData, null, 2)}\n\`\`\`\n\n` +
        `üïê ${new Date().toLocaleString('ru-RU')}`;

      await this.telegramBot.telegram.sendMessage(this.adminId, alertMessage, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', callback_data: 'admin_detailed_diagnostics' },
              { text: 'üéõÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', callback_data: 'admin_main' }
            ]
          ]
        }
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è v5.0:', error);
    }
  }

  // ===== –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –ò –û–ß–ò–°–¢–ö–ê =====

  async createBackup() {
    try {
      const backup = {
        timestamp: new Date().toISOString(),
        version: '5.0.0',
        architecture: 'modular_v3_with_notifications',
        leads_data: this.adminNotifications.leadDataStorage || {},
        integration_stats: this.integrationStats,
        
        // –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        modular_stats: this.getExtendedStats(),
        
        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notification_analytics: this.adminNotifications.analytics?.exportAllData() || {},
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notification_settings: {
          current_mode: this.getNotificationMode(),
          settings: this.adminNotifications?.getStats()?.settings || {}
        },
        
        configuration: {
          admin_id: this.adminId,
          main_bot_url: config.MAIN_BOT_API_URL,
          crm_webhook: config.CRM_WEBHOOK_URL,
          trainer_contact: config.TRAINER_CONTACT
        },
        
        metadata: {
          total_leads: Object.keys(this.adminNotifications.leadDataStorage || {}).length,
          total_modules: this.getModuleCount(),
          backup_size: 0,
          created_by: 'admin_integration_v5.0_modular_notifications'
        }
      };

      const backupString = JSON.stringify(backup, null, 2);
      backup.metadata.backup_size = Buffer.byteLength(backupString, 'utf8');

      return backup;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ v5.0:', error);
      throw error;
    }
  }

  async cleanupOldData(daysToKeep = 30) {
    try {
      // –û—á–∏—Å—Ç–∫–∞ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const cleanupResult = this.adminNotifications.cleanupOldData(daysToKeep);

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
      cleanupResult.architecture = 'modular_v3_with_notifications';
      cleanupResult.version = '5.0.0';
      cleanupResult.modules_count = this.getModuleCount();

      console.log(`üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö v5.0 –∑–∞–≤–µ—Ä—à–µ–Ω–∞:`, cleanupResult);

      return cleanupResult;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö v5.0:', error);
      return { error: error.message, version: '5.0.0' };
    }
  }

  // ===== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ò–ù–¢–ï–ì–†–ê–¶–ò–ò =====

  getIntegrationInfo() {
    return {
      name: 'AdminIntegration',
      version: '5.0.0',
      architecture: 'modular_v3_with_notifications',
      status: this.integrationStats.initialized ? 'active' : 'inactive',
      features: [
        'modular_architecture_v3',
        'modular_handlers',
        'modular_callbacks',
        'notification_system_v4',
        'notification_modes_management',
        'test_notifications',
        'command_routing',
        'callback_routing',
        'aggregated_analytics',
        'comprehensive_reporting',
        'module_diagnostics',
        'automated_scheduling',
        'emergency_alerts',
        'data_backup',
        'cleanup_automation',
        'notification_analytics'
      ],
      modules: {
        handlers: {
          loaded: !!this.adminHandlers,
          count: 4,
          modules: ['main', 'stats', 'leads', 'system']
        },
        callbacks: {
          loaded: !!this.adminCallbacks,
          count: 4,
          modules: ['navigation', 'stats', 'leads', 'system']
        },
        notifications: {
          loaded: !!this.adminNotifications,
          count: 5,
          modules: ['system', 'templates', 'handlers', 'formatters', 'analytics'],
          current_mode: this.getNotificationMode()
        }
      },
      total_modules: this.getModuleCount(),
      statistics: this.integrationStats,
      health_status: 'healthy',
      last_updated: new Date().toISOString()
    };
  }

  // ===== –ë–ï–ó–û–ü–ê–°–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï –†–ê–ë–û–¢–´ =====

  async shutdown() {
    try {
      console.log('üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã AdminIntegration v5.0...');
      
      // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
      const backup = await this.createBackup();
      console.log('üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è v5.0 —Å–æ–∑–¥–∞–Ω–∞');
      
      // –û—á–∏—â–∞–µ–º –º–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      if (this.adminHandlers) {
        this.adminHandlers.cleanup();
      }
      
      if (this.adminCallbacks) {
        this.adminCallbacks.cleanup();
      }
      
      // –û—á–∏—â–∞–µ–º –º–æ–¥—É–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      if (this.adminNotifications?.handlers) {
        this.adminNotifications.handlers.cleanup();
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      if (this.adminId) {
        const notificationMode = this.getNotificationMode();
        
        await this.telegramBot.telegram.sendMessage(
          this.adminId,
          `üîÑ *–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—å–Ω–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ v5.0*\n\n` +
          `**–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:** –ú–æ–¥—É–ª—å–Ω–∞—è v3 —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏\n` +
          `–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞\n` +
          `–í—Å–µ–≥–æ –ª–∏–¥–æ–≤: ${backup.metadata.total_leads}\n` +
          `–ú–æ–¥—É–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${backup.metadata.total_modules}/13\n` +
          `–ê–¥–º–∏–Ω-–¥–µ–π—Å—Ç–≤–∏–π: ${this.integrationStats.totalAdminActions}\n` +
          `–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${this.formatUptime(process.uptime())}\n` +
          `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${this.adminNotifications.analytics?.getStats()?.notifications?.totalSent || 0}\n` +
          `–†–µ–∂–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${notificationMode.emoji} ${notificationMode.mode}\n\n` +
          `üïê ${new Date().toLocaleString('ru-RU')}`,
          { parse_mode: 'Markdown' }
        );
      }
      
      console.log('‚úÖ AdminIntegration v5.0 –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ AdminIntegration v5.0:', error);
    }
  }

  // ===== –£–¢–ò–õ–ò–¢–´ =====

  formatUptime(seconds) {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const secs = Math.floor(seconds % 60);
    
    if (hours > 24) {
      const days = Math.floor(hours / 24);
      const remainingHours = hours % 24;
      return `${days}–¥ ${remainingHours}—á ${minutes}–º`;
    }
    
    return `${hours}—á ${minutes}–º ${secs}—Å`;
  }

  // ===== –ú–ï–¢–û–î–´ –î–õ–Ø –í–ù–ï–®–ù–ï–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø =====

  isReady() {
    return this.integrationStats.initialized && 
           this.adminHandlers && 
           this.adminCallbacks && 
           this.adminNotifications &&
           this.getModuleCount() >= 10; // –ú–∏–Ω–∏–º—É–º 10 –º–æ–¥—É–ª–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–æ
  }

  getStatus() {
    const notificationMode = this.getNotificationMode();
    
    return {
      ready: this.isReady(),
      version: '5.0.0',
      architecture: 'modular_v3_with_notifications',
      admin_id: this.adminId,
      modules_loaded: {
        handlers: !!this.adminHandlers,
        callbacks: !!this.adminCallbacks,
        notifications: !!this.adminNotifications,
        notification_analytics: !!this.adminNotifications?.analytics
      },
      notification_system: {
        current_mode: notificationMode,
        modes_available: ['silent', 'filtered', 'test_mode', 'all_notifications'],
        test_mode: this.adminNotifications?.testMode || false,
        filter_admin: this.adminNotifications?.filterAdminResponses || false,
        silent_mode: this.adminNotifications?.silentMode || false
      },
      module_count: this.getModuleCount(),
      total_actions: this.integrationStats.totalAdminActions,
      last_action: this.integrationStats.lastAction,
      errors: this.integrationStats.errors
    };
  }

  // ===== –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò (–¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞) =====

  /**
   * –í–∫–ª—é—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  enableTestMode() {
    return this.adminNotifications?.enableTestMode() || null;
  }

  /**
   * –û—Ç–∫–ª—é—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  disableTestMode() {
    return this.adminNotifications?.disableTestMode() || null;
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  enableAdminFilter() {
    return this.adminNotifications?.enableAdminFilter() || null;
  }

  /**
   * –û—Ç–∫–ª—é—á–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  disableAdminFilter() {
    return this.adminNotifications?.disableAdminFilter() || null;
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º
   */
  enableSilentMode() {
    return this.adminNotifications?.enableSilentMode() || null;
  }

  /**
   * –û—Ç–∫–ª—é—á–∞–µ—Ç —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º
   */
  disableSilentMode() {
    return this.adminNotifications?.disableSilentMode() || null;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  async sendTestNotification() {
    if (!this.adminNotifications) {
      throw new Error('–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    return await this.adminNotifications.sendTestNotification();
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  getNotificationStats() {
    return this.adminNotifications?.getStats() || null;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  exportNotificationSettings() {
    if (!this.adminNotifications) return null;
    
    return {
      current_mode: this.getNotificationMode(),
      settings: {
        test_mode: this.adminNotifications.testMode,
        filter_admin_responses: this.adminNotifications.filterAdminResponses,
        silent_mode: this.adminNotifications.silentMode,
        notifications_enabled: this.adminNotifications.enableNotifications
      },
      admin_id: this.adminNotifications.adminId,
      stats: this.adminNotifications.getStats(),
      exported_at: new Date().toISOString()
    };
  }
}

module.exports = AdminIntegration;
