// –§–∞–π–ª: scripts/test-admin-panel.js
// –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏

require('dotenv').config();

async function testAdminPanel() {
  console.log('üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò\n');
  console.log('='.repeat(50));

  const tests = [
    testEnvironment,
    testBotInitialization,
    testAdminIntegration,
    testDiagnostics,
    testBackupSystem,
    testDataManagement,
    testNotificationSystem
  ];

  let passed = 0;
  let failed = 0;

  for (const test of tests) {
    try {
      console.log(`\nüß™ ${test.name}:`);
      await test();
      console.log('‚úÖ –ü–†–û–®–ï–õ');
      passed++;
    } catch (error) {
      console.log(`‚ùå –ü–†–û–í–ê–õ–ï–ù: ${error.message}`);
      failed++;
    }
  }

  console.log('\n' + '='.repeat(50));
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
  console.log(`‚úÖ –ü—Ä–æ—à–ª–æ: ${passed}`);
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${failed}`);
  console.log(`üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${Math.round((passed / (passed + failed)) * 100)}%`);

  if (failed === 0) {
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.');
    process.exit(0);
  } else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º.');
    process.exit(1);
  }
}

async function testEnvironment() {
  const requiredVars = ['LEAD_BOT_TOKEN', 'ADMIN_ID'];
  const missingVars = requiredVars.filter(key => !process.env[key]);
  
  if (missingVars.length > 0) {
    throw new Error(`–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${missingVars.join(', ')}`);
  }
  
  console.log('  ‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

async function testBotInitialization() {
  const BreathingLeadBot = require('../core/bot');
  const bot = new BreathingLeadBot();
  
  if (!bot) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞');
  }
  
  console.log('  ‚úì –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

async function testAdminIntegration() {
  const BreathingLeadBot = require('../core/bot');
  const bot = new BreathingLeadBot();
  
  if (!bot.adminIntegration) {
    throw new Error('–ê–¥–º–∏–Ω-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞');
  }
  
  if (!bot.adminIntegration.adminPanel) {
    throw new Error('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
  
  console.log('  ‚úì –ê–¥–º–∏–Ω-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞');
  console.log(`  ‚úì Admin ID: ${bot.adminIntegration.adminPanel.adminId}`);
}

async function testDiagnostics() {
  const BreathingLeadBot = require('../core/bot');
  const bot = new BreathingLeadBot();
  
  const diagnostics = await bot.runDiagnostics();
  
  if (!diagnostics || !diagnostics.overall_status) {
    throw new Error('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  }
  
  console.log(`  ‚úì –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ${diagnostics.overall_status}`);
}

async function testBackupSystem() {
  const BreathingLeadBot = require('../core/bot');
  const bot = new BreathingLeadBot();
  
  const backup = await bot.createBackup();
  
  if (!backup || !backup.timestamp) {
    throw new Error('–°–∏—Å—Ç–µ–º–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  }
  
  console.log(`  ‚úì –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
  console.log(`  ‚úì –õ–∏–¥–æ–≤ –≤ –∫–æ–ø–∏–∏: ${backup.metadata.total_leads}`);
}

async function testDataManagement() {
  const BreathingLeadBot = require('../core/bot');
  const bot = new BreathingLeadBot();
  
  const result = await bot.cleanupOldData(365); // –¢–µ—Å—Ç–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  
  if (!result) {
    throw new Error('–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  }
  
  console.log('  ‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
}

async function testNotificationSystem() {
  const BreathingLeadBot = require('../core/bot');
  const bot = new BreathingLeadBot();
  
  if (!bot.adminIntegration.adminPanel.notificationSettings) {
    throw new Error('–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
  }
  
  console.log('  ‚úì –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
}

if (require.main === module) {
  testAdminPanel();
}

module.exports = testAdminPanel;
