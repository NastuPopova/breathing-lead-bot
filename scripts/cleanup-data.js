// –§–∞–π–ª: scripts/cleanup-data.js
// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö

require('dotenv').config();

async function cleanupData() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    const BreathingLeadBot = require('../core/bot');
    const bot = new BreathingLeadBot();

    if (!bot.adminIntegration) {
      console.log('‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞');
      process.exit(1);
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const args = process.argv.slice(2);
    const daysToKeep = args[0] ? parseInt(args[0]) : 30;

    console.log(`üìÖ –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ä—à–µ ${daysToKeep} –¥–Ω–µ–π...`);

    const result = await bot.cleanupOldData(daysToKeep);

    if (result.error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ${result.error}`);
      process.exit(1);
    }

    console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${result.cleaned_count}`);
    console.log(`üìä –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–µ–π: ${result.remaining_count}`);
    console.log(`üìÖ –ì—Ä–∞–Ω–∏—á–Ω–∞—è –¥–∞—Ç–∞: ${new Date(result.cutoff_date).toLocaleDateString('ru-RU')}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  }
}

if (require.main === module) {
  cleanupData();
}

module.exports = cleanupData;
