// –§–∞–π–ª: test-full-admin.js
// –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

require('dotenv').config();

async function runFullAdminTest() {
  console.log('üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò\n');
  console.log('='.repeat(60));

  try {
    const BreathingLeadBot = require('./core/bot');
    const bot = new BreathingLeadBot();

    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò');
    console.log('='.repeat(30));
    
    console.log(`‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: ${!!bot}`);
    console.log(`‚úÖ –ê–¥–º–∏–Ω-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ${!!bot.adminIntegration}`);
    console.log(`‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${!!bot.adminIntegration?.adminNotifications}`);
    console.log(`‚úÖ ADMIN_ID: ${process.env.ADMIN_ID || '–ù–ï –ù–ê–°–¢–†–û–ï–ù'}`);

    if (!bot.adminIntegration) {
      throw new Error('–ê–¥–º–∏–Ω-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞');
    }

    // 2. –í–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
    console.log('\n2Ô∏è‚É£ –í–ö–õ–Æ–ß–ï–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –†–ï–ñ–ò–ú–ê');
    console.log('='.repeat(30));
    
    if (bot.adminIntegration.adminNotifications.enableTestMode) {
      bot.adminIntegration.adminNotifications.enableTestMode();
    } else {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      bot.adminIntegration.adminNotifications.enableNotifications = true;
      bot.adminIntegration.adminNotifications.testMode = true;
      console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
    }

    // 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    console.log('\n3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô');
    console.log('='.repeat(30));
    
    const notificationTest = await bot.adminIntegration.adminNotifications.testNotificationSystem?.() || 
      { ready: true, details: {} };
    
    console.log(`–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã: ${notificationTest.ready ? '‚úÖ' : '‚ùå'}`);

    // 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–∏–¥–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    console.log('\n4Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –õ–ò–î–û–í');
    console.log('='.repeat(30));

    const testLeads = [
      {
        name: '–ì–æ—Ä—è—á–∏–π –ª–∏–¥ (–≤–∑—Ä–æ—Å–ª—ã–π)',
        data: createTestLead('HOT_LEAD', 'adult', 'admin_hot')
      },
      {
        name: '–¢–µ–ø–ª—ã–π –ª–∏–¥ (–¥–µ—Ç—Å–∫–∏–π)', 
        data: createTestLead('WARM_LEAD', 'child', 'admin_warm')
      },
      {
        name: '–•–æ–ª–æ–¥–Ω—ã–π –ª–∏–¥ (–≤–∑—Ä–æ—Å–ª—ã–π)',
        data: createTestLead('COLD_LEAD', 'adult', 'admin_cold')
      }
    ];

    // 5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    console.log('\n5Ô∏è‚É£ –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–´–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô');
    console.log('='.repeat(30));

    for (let i = 0; i < testLeads.length; i++) {
      const lead = testLeads[i];
      console.log(`\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞: ${lead.name}`);
      
      try {
        await bot.adminIntegration.adminNotifications.notifyNewLead(lead.data);
        console.log(`‚úÖ ${lead.name} - –û–¢–ü–†–ê–í–õ–ï–ù–û`);
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 2000));
        
      } catch (error) {
        console.log(`‚ùå ${lead.name} - –û–®–ò–ë–ö–ê: ${error.message}`);
      }
    }

    // 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥
    console.log('\n6Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù-–ö–û–ú–ê–ù–î');
    console.log('='.repeat(30));

    await testAdminCommands(bot);

    // 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log('\n7Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò');
    console.log('='.repeat(30));

    const diagnostics = await bot.runDiagnostics();
    console.log(`–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ${diagnostics.overall_status}`);
    
    Object.entries(diagnostics.checks).forEach(([check, result]) => {
      const emoji = result.status === 'OK' ? '‚úÖ' : result.status === 'WARNING' ? '‚ö†Ô∏è' : '‚ùå';
      console.log(`${emoji} ${check}: ${result.message}`);
    });

    // 8. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\n8Ô∏è‚É£ –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
    console.log('='.repeat(30));
    
    const stats = bot.adminIntegration.adminNotifications.getStats();
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:');
    console.log(`   –í—Å–µ–≥–æ –ª–∏–¥–æ–≤: ${stats.stored_leads_count}`);
    console.log(`   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã: ${stats.notifications_enabled}`);
    console.log(`   Admin ID: ${stats.admin_id}`);

    console.log('\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!');
    console.log('\nüì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
    console.log('üí° –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ä–µ–∞–ª—å–Ω—ã–π –æ–ø—Ä–æ—Å –∏ —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç');

  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error);
    console.error('–°—Ç–µ–∫:', error.stack);
    process.exit(1);
  }
}

function createTestLead(segment, type, username) {
  const baseId = Date.now().toString().slice(-6);
  
  return {
    userInfo: {
      telegram_id: process.env.ADMIN_ID, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      first_name: `–¢–µ—Å—Ç ${segment}`,
      username: username
    },
    surveyType: type,
    surveyAnswers: type === 'adult' ? {
      age_group: '31-45',
      occupation: 'management',
      stress_level: segment === 'HOT_LEAD' ? 9 : segment === 'WARM_LEAD' ? 6 : 3,
      current_problems: ['chronic_stress', 'insomnia'],
      breathing_experience: 'never',
      time_commitment: '10-15_minutes',
      main_goals: ['stress_resistance', 'improve_sleep']
    } : {
      child_age_detail: '7-8',
      child_problems_detailed: ['tantrums', 'sleep_problems'],
      child_parent_involvement: 'both_parents',
      child_time_availability: 'before_sleep'
    },
    analysisResult: {
      segment: segment,
      scores: {
        total: segment === 'HOT_LEAD' ? 85 : segment === 'WARM_LEAD' ? 65 : 35,
        urgency: segment === 'HOT_LEAD' ? 90 : segment === 'WARM_LEAD' ? 60 : 30,
        readiness: segment === 'HOT_LEAD' ? 80 : segment === 'WARM_LEAD' ? 70 : 40,
        fit: segment === 'HOT_LEAD' ? 85 : segment === 'WARM_LEAD' ? 65 : 35
      },
      primaryIssue: type === 'adult' ? 'chronic_stress' : 'tantrums'
    },
    timestamp: new Date().toISOString()
  };
}

async function testAdminCommands(bot) {
  if (!bot.adminIntegration?.adminHandlers) {
    console.log('‚ö†Ô∏è AdminHandlers –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã');
    return;
  }

  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥:');
  
  const commands = ['admin', 'stats', 'hot_leads', 'health'];
  
  commands.forEach(command => {
    const handler = bot.adminIntegration.adminHandlers;
    console.log(`‚úÖ /${command} - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ—Ç–æ–≤: ${!!handler}`);
  });
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const stats = bot.adminIntegration.adminHandlers.getAggregatedStats();
  console.log('üìä –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞:', !!stats);
}

if (require.main === module) {
  runFullAdminTest();
}

module.exports = runFullAdminTest;
