// –§–∞–π–ª: modules/admin/notifications/notification_templates.js
// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

const { Markup } = require('telegraf');
const NotificationFormatters = require('./notification_formatters');

class NotificationTemplates {
  constructor() {
    this.formatters = new NotificationFormatters();
    
    // –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤
    this.segmentEmojis = {
      'HOT_LEAD': 'üî•',
      'WARM_LEAD': '‚≠ê',
      'COLD_LEAD': '‚ùÑÔ∏è',
      'NURTURE_LEAD': 'üå±'
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ª–∏–¥–µ
   */
  generateLeadNotification(userData, dailyStats) {
    const { userInfo, analysisResult, surveyAnswers, surveyType } = userData;
    const isChildFlow = surveyType === 'child';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    const segment = analysisResult?.segment || 'UNKNOWN';
    const emoji = this.segmentEmojis[segment] || '‚ùì';
    const score = analysisResult?.scores?.total || 0;

    let message = `${emoji} *–ù–û–í–´–ô –õ–ò–î ${segment}*\n\n`;
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    message += `üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:*\n`;
    message += `‚Ä¢ –ò–º—è: ${userInfo?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n`;
    message += `‚Ä¢ Username: ${userInfo?.username ? '@' + userInfo.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
    message += `‚Ä¢ Telegram ID: \`${userInfo?.telegram_id}\`\n`;
    message += `‚Ä¢ –¢–∏–ø –∞–Ω–∫–µ—Ç—ã: ${isChildFlow ? 'üë∂ –î–µ—Ç—Å–∫–∞—è' : 'üë®‚Äçüíº –í–∑—Ä–æ—Å–ª–∞—è'}\n\n`;

    // –°–∫–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑
    message += `üìä *–ê–Ω–∞–ª–∏–∑ VERSE:*\n`;
    message += `‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª: ${score}/100\n`;
    if (analysisResult?.scores) {
      message += `‚Ä¢ –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${analysisResult.scores.urgency}/100\n`;
      message += `‚Ä¢ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${analysisResult.scores.readiness}/100\n`;
      message += `‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${analysisResult.scores.fit}/100\n`;
    }
    message += `\n`;

    // –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
    if (analysisResult?.primaryIssue) {
      const problemDesc = this.formatters.translateIssue(analysisResult.primaryIssue);
      message += `üéØ *–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞:* ${problemDesc}\n\n`;
    }

    // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    if (segment === 'HOT_LEAD') {
      message += `‚ö° *–°–†–û–ß–ù–û:* –°–≤—è–∑–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤!\n\n`;
    } else if (segment === 'WARM_LEAD') {
      message += `‚è∞ *–°–≤—è–∑–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤*\n\n`;
    }

    // –ö–ª—é—á–µ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∏–∑ –∞–Ω–∫–µ—Ç—ã
    message += `üìù *–ö–ª—é—á–µ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã:*\n`;
    message += this.formatSurveyAnswers(surveyAnswers, isChildFlow);

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è
    message += `\nüìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è:*\n`;
    message += `‚Ä¢ –í—Å–µ–≥–æ –ª–∏–¥–æ–≤: ${dailyStats.totalLeads}\n`;
    message += `‚Ä¢ üî• –ì–æ—Ä—è—á–∏—Ö: ${dailyStats.hotLeads}\n`;
    message += `‚Ä¢ ‚≠ê –¢–µ–ø–ª—ã—Ö: ${dailyStats.warmLeads}\n`;
    message += `‚Ä¢ ‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã—Ö: ${dailyStats.coldLeads}\n`;

    // –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è
    message += `\nüïê *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`;

    return message;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  generateAdminKeyboard(userData) {
    const userTelegramId = userData.userInfo?.telegram_id;
    const username = userData.userInfo?.username;
    const segment = userData.analysisResult?.segment;

    const buttons = [];

    // –ö–Ω–æ–ø–∫–∞ —Å–≤—è–∑–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if (username) {
      buttons.push([Markup.button.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `https://t.me/${username}`)]);
    }

    // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ–≥–º–µ–Ω—Ç–∞
    if (segment === 'HOT_LEAD') {
      buttons.push([
        Markup.button.callback('üî• –°—Ä–æ—á–Ω—ã–π –∑–≤–æ–Ω–æ–∫', `admin_urgent_call_${userTelegramId}`),
        Markup.button.callback('üìÖ –ó–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', `admin_book_consultation_${userTelegramId}`)
      ]);
    } else if (segment === 'WARM_LEAD') {
      buttons.push([
        Markup.button.callback('üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å', `admin_call_${userTelegramId}`),
        Markup.button.callback('üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', `admin_send_materials_${userTelegramId}`)
      ]);
    } else {
      buttons.push([
        Markup.button.callback('üìß –î–æ–±–∞–≤–∏—Ç—å –≤ —Ä–∞—Å—Å—ã–ª–∫—É', `admin_add_newsletter_${userTelegramId}`)
      ]);
    }

    // –°–ª—É–∂–µ–±–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    buttons.push([
      Markup.button.callback('üìä –ü–æ–ª–Ω–∞—è –∞–Ω–∫–µ—Ç–∞', `admin_full_survey_${userTelegramId}`),
      Markup.button.callback('üè∑Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–µ–≥–º–µ–Ω—Ç', `admin_change_segment_${userTelegramId}`)
    ]);

    buttons.push([
      Markup.button.callback('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ', `admin_mark_processed_${userTelegramId}`)
    ]);

    return Markup.inlineKeyboard(buttons);
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  generateSurveyResultsMessage(userData) {
    const { userInfo, surveyAnswers, surveyType, analysisResult } = userData;
    const isChildFlow = surveyType === 'child';

    let message = `üìã *–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ö–ï–¢–ò–†–û–í–ê–ù–ò–Ø*\n\n`;

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    message += `üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:*\n`;
    message += `‚Ä¢ –ò–º—è: ${userInfo?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n`;
    message += `‚Ä¢ Username: ${userInfo?.username ? '@' + userInfo.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
    message += `‚Ä¢ Telegram ID: \`${userInfo?.telegram_id}\`\n`;
    message += `‚Ä¢ –¢–∏–ø –∞–Ω–∫–µ—Ç—ã: ${isChildFlow ? 'üë∂ –î–µ—Ç—Å–∫–∞—è' : 'üë®‚Äçüíº –í–∑—Ä–æ—Å–ª–∞—è'}\n\n`;

    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç—ã
    message += `üìù *–û—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n`;
    message += this.formatDetailedSurveyAnswers(surveyAnswers, isChildFlow);

    // –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
    message += `\nüìä *–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:*\n`;
    message += `‚Ä¢ –°–µ–≥–º–µ–Ω—Ç: ${analysisResult?.segment || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}\n`;
    message += `‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª: ${analysisResult?.scores?.total || 0}/100\n`;
    if (analysisResult?.scores) {
      message += `‚Ä¢ –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${analysisResult.scores.urgency}/100\n`;
      message += `‚Ä¢ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${analysisResult.scores.readiness}/100\n`;
      message += `‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${analysisResult.scores.fit}/100\n`;
    }

    // –í—Ä–µ–º—è
    message += `\nüïê *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`;

    return message;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  generateSurveyResultsKeyboard(userData) {
    const userTelegramId = userData.userInfo?.telegram_id;
    const username = userData.userInfo?.username;

    return Markup.inlineKeyboard([
      [Markup.button.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `https://t.me/${username || 'user'}`)],
      [Markup.button.callback('üìä –ü–æ–ª–Ω–∞—è –∞–Ω–∫–µ—Ç–∞', `admin_full_survey_${userTelegramId}`)]
    ]);
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ä–æ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  generateUrgentNotification(userData, dailyStats) {
    const urgentMessage = `üö® *–°–†–û–ß–ù–´–ô –ì–û–†–Ø–ß–ò–ô –õ–ò–î!*\n\n` +
      `üë§ ${userData.userInfo?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}\n` +
      `üí¨ ${userData.userInfo?.username ? '@' + userData.userInfo.username : '–ë–µ–∑ username'}\n` +
      `üìû ID: \`${userData.userInfo?.telegram_id}\`\n\n` +
      `‚ö° *–¢—Ä–µ–±—É–µ—Ç —Å–≤—è–∑–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤!*\n` +
      `üéØ –ë–∞–ª–ª: ${userData.analysisResult?.scores?.total || 0}/100\n\n` +
      `üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ #${dailyStats.hotLeads}`;

    return urgentMessage;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ä–æ—á–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  generateUrgentKeyboard(userData) {
    const userTelegramId = userData.userInfo?.telegram_id;
    const username = userData.userInfo?.username;

    return Markup.inlineKeyboard([
      [Markup.button.callback('üî• –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ä–æ—á–Ω–æ', `admin_urgent_process_${userTelegramId}`)],
      [Markup.button.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å —Å–µ–π—á–∞—Å', `https://t.me/${username || 'user'}`)]
    ]);
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É
   */
  generateDailySummary(dailyStats) {
    const today = new Date().toLocaleDateString('ru-RU');
    
    let message = `üìä *–ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê*\n\n`;
    message += `üìÖ –î–∞—Ç–∞: ${today}\n\n`;
    
    message += `üë• **–õ–∏–¥—ã –∑–∞ –¥–µ–Ω—å:**\n`;
    message += `‚Ä¢ –í—Å–µ–≥–æ: ${dailyStats.totalLeads}\n`;
    message += `‚Ä¢ üî• –ì–æ—Ä—è—á–∏–µ: ${dailyStats.hotLeads}\n`;
    message += `‚Ä¢ ‚≠ê –¢–µ–ø–ª—ã–µ: ${dailyStats.warmLeads}\n`;
    message += `‚Ä¢ ‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã–µ: ${dailyStats.coldLeads}\n`;
    message += `‚Ä¢ üå± –î–ª—è –≤–∑—Ä–∞—â–∏–≤–∞–Ω–∏—è: ${dailyStats.nurtureLeads}\n\n`;
    
    const totalLeads = dailyStats.totalLeads;
    const hotLeads = dailyStats.hotLeads;
    const conversion = totalLeads > 0 ? ((hotLeads / totalLeads) * 100).toFixed(1) : 0;
    
    message += `üìà **–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**\n`;
    message += `‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –≥–æ—Ä—è—á–∏–µ: ${conversion}%\n\n`;
    
    message += `üéØ **–°–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:**\n`;
    if (hotLeads > 0) {
      message += `‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å ${hotLeads} –≥–æ—Ä—è—á–∏—Ö –ª–∏–¥–æ–≤\n`;
    }
    if (totalLeads === 0) {
      message += `‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ª–∏–¥–æ–≤\n`;
    }
    message += `‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–ª–∞–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n\n`;
    
    message += `üïê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç ‚Ä¢ ${new Date().toLocaleTimeString('ru-RU')}`;

    return message;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–≤–æ–¥–∫–∏
   */
  generateDailySummaryKeyboard() {
    return Markup.inlineKeyboard([
      [{ text: 'üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'admin_stats' }],
      [{ text: 'üéõÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', callback_data: 'admin_main' }]
    ]);
  }

  // ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ =====

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã –∞–Ω–∫–µ—Ç—ã –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  formatSurveyAnswers(surveyAnswers, isChildFlow) {
    if (!surveyAnswers) return '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n';

    let formatted = '';
    
    if (isChildFlow) {
      // –î–µ—Ç—Å–∫–∞—è –∞–Ω–∫–µ—Ç–∞
      if (surveyAnswers?.child_age_detail) {
        formatted += `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞: ${this.formatters.translateValue(surveyAnswers.child_age_detail)}\n`;
      }
      if (surveyAnswers?.child_problems_detailed) {
        formatted += `‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã: ${this.formatters.translateArray(surveyAnswers.child_problems_detailed, 2)}\n`;
      }
      if (surveyAnswers?.child_parent_involvement) {
        formatted += `‚Ä¢ –ö—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è: ${this.formatters.translateValue(surveyAnswers.child_parent_involvement)}\n`;
      }
    } else {
      // –í–∑—Ä–æ—Å–ª–∞—è –∞–Ω–∫–µ—Ç–∞
      if (surveyAnswers?.stress_level) {
        formatted += `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞: ${surveyAnswers.stress_level}/10\n`;
      }
      if (surveyAnswers?.current_problems) {
        formatted += `‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã: ${this.formatters.translateArray(surveyAnswers.current_problems, 2)}\n`;
      }
      if (surveyAnswers?.occupation) {
        formatted += `‚Ä¢ –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${this.formatters.translateValue(surveyAnswers.occupation)}\n`;
      }
      if (surveyAnswers?.time_commitment) {
        formatted += `‚Ä¢ –í—Ä–µ–º—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏: ${this.formatters.translateValue(surveyAnswers.time_commitment)}\n`;
      }
    }

    return formatted || '–ù–µ—Ç –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n';
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∞–Ω–∫–µ—Ç—ã
   */
  formatDetailedSurveyAnswers(surveyAnswers, isChildFlow) {
    if (!surveyAnswers) return '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n';

    let formatted = '';
    
    if (isChildFlow) {
      // –î–µ—Ç—Å–∫–∞—è –∞–Ω–∫–µ—Ç–∞ - –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      const childFields = [
        'child_age_detail', 'child_education_status', 'child_schedule_stress',
        'child_problems_detailed', 'child_parent_involvement', 
        'child_motivation_approach', 'child_time_availability'
      ];
      
      childFields.forEach(field => {
        if (surveyAnswers[field]) {
          const label = this.getFieldLabel(field);
          const value = Array.isArray(surveyAnswers[field]) ? 
            this.formatters.translateArray(surveyAnswers[field]) :
            this.formatters.translateValue(surveyAnswers[field]);
          formatted += `‚Ä¢ ${label}: ${value}\n`;
        }
      });
    } else {
      // –í–∑—Ä–æ—Å–ª–∞—è –∞–Ω–∫–µ—Ç–∞ - –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      const adultFields = [
        'age_group', 'occupation', 'physical_activity', 'stress_level',
        'sleep_quality', 'current_problems', 'priority_problem',
        'breathing_experience', 'time_commitment', 'main_goals'
      ];
      
      adultFields.forEach(field => {
        if (surveyAnswers[field]) {
          const label = this.getFieldLabel(field);
          const value = Array.isArray(surveyAnswers[field]) ? 
            this.formatters.translateArray(surveyAnswers[field]) :
            (typeof surveyAnswers[field] === 'number' ? 
              `${surveyAnswers[field]}/10` : 
              this.formatters.translateValue(surveyAnswers[field]));
          formatted += `‚Ä¢ ${label}: ${value}\n`;
        }
      });
    }

    return formatted || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n';
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
   */
  getFieldLabel(field) {
    const labels = {
      // –î–µ—Ç—Å–∫–∏–µ –ø–æ–ª—è
      'child_age_detail': '–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞',
      'child_education_status': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      'child_schedule_stress': '–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å',
      'child_problems_detailed': '–ü—Ä–æ–±–ª–µ–º—ã',
      'child_parent_involvement': '–ö—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è',
      'child_motivation_approach': '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
      'child_time_availability': '–í—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏–π',
      
      // –í–∑—Ä–æ—Å–ª—ã–µ –ø–æ–ª—è
      'age_group': '–í–æ–∑—Ä–∞—Å—Ç',
      'occupation': '–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
      'physical_activity': '–§–∏–∑.–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      'stress_level': '–£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞',
      'sleep_quality': '–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞',
      'current_problems': '–¢–µ–∫—É—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',
      'priority_problem': '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞',
      'breathing_experience': '–û–ø—ã—Ç —Å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏',
      'time_commitment': '–í—Ä–µ–º—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏',
      'main_goals': '–û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏'
    };

    return labels[field] || field;
  }

  /**
   * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
   */
  getInfo() {
    return {
      name: 'NotificationTemplates',
      version: '1.0.0',
      features: [
        'lead_notifications',
        'survey_results',
        'urgent_notifications',
        'daily_summaries',
        'admin_keyboards'
      ],
      supported_segments: Object.keys(this.segmentEmojis),
      last_updated: new Date().toISOString()
    };
  }
}

module.exports = NotificationTemplates;