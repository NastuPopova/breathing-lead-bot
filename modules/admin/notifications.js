// –§–∞–π–ª: modules/admin/notifications.js
// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤—ã—Ö –ª–∏–¥–∞—Ö

const { Markup } = require('telegraf');
const config = require('../../config');

class AdminNotificationSystem {
  constructor(bot) {
    this.bot = bot;
    this.adminId = config.ADMIN_ID;
    this.enableNotifications = true;
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    this.dailyStats = {
      totalLeads: 0,
      hotLeads: 0,
      warmLeads: 0,
      coldLeads: 0,
      nurtureLeads: 0,
      lastReset: new Date().toDateString()
    };
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–º –ª–∏–¥–µ
   */
  async notifyNewLead(userData) {
    if (!this.adminId || !this.enableNotifications) {
      console.log('‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω—ã –∏–ª–∏ ADMIN_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return;
    }

    try {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –Ω–æ–≤—ã–π –¥–µ–Ω—å
      this.resetDailyStatsIfNeeded();
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      this.updateDailyStats(userData.analysisResult?.segment);

      // –§–æ—Ä–º–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      const message = this.generateLeadNotification(userData);
      const keyboard = this.generateAdminKeyboard(userData);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await this.bot.telegram.sendMessage(this.adminId, message, {
        parse_mode: 'Markdown',
        ...keyboard
      });

      console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ª–∏–¥–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: ${userData.userInfo?.telegram_id}`);
      
      // –ï—Å–ª–∏ —ç—Ç–æ –≥–æ—Ä—è—á–∏–π –ª–∏–¥, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å—Ä–æ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (userData.analysisResult?.segment === 'HOT_LEAD') {
        await this.sendUrgentNotification(userData);
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
   */
  async notifySurveyResults(userData) {
    if (!this.adminId || !this.enableNotifications) {
      console.log('‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω—ã –∏–ª–∏ ADMIN_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return;
    }

    try {
      const { userInfo, surveyAnswers, surveyType, analysisResult } = userData;
      const isChildFlow = surveyType === 'child';

      let message = `üìã *–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ö–ï–¢–ò–†–û–í–ê–ù–ò–Ø*\n\n`;

      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      message += `üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:*\n`;
      message += `‚Ä¢ –ò–º—è: ${userInfo?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n`;
      message += `‚Ä¢ Username: ${userInfo?.username ? '@' + userInfo.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
      message += `‚Ä¢ Telegram ID: \`${userInfo?.telegram_id}\`\n`;
      message += `‚Ä¢ –¢–∏–ø –∞–Ω–∫–µ—Ç—ã: ${isChildFlow ? 'üë∂ –î–µ—Ç—Å–∫–∞—è' : 'üë®‚Äçüíº –í–∑—Ä–æ—Å–ª–∞—è'}\n\n`;

      // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      message += `üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n`;
      if (userData.contactInfo?.phone) {
        message += `‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${userData.contactInfo.phone}\n`;
      }
      if (userData.contactInfo?.email) {
        message += `‚Ä¢ Email: ${userData.contactInfo.email}\n`;
      }
      message += `‚Ä¢ Telegram: ${userInfo?.username ? '@' + userInfo.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n`;

      // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç—ã
      message += `üìù *–û—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n`;
      if (isChildFlow) {
        if (surveyAnswers?.child_age_detail m·ªπ) {
          message += `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞: ${surveyAnswers.child_age_detail}\n`;
        }
        if (surveyAnswers?.child_problems_detailed) {
          const problems = Array.isArray(surveyAnswers.child_problems_detailed) 
            ? surveyAnswers.child_problems_detailed.join(', ')
            : surveyAnswers.child_problems_detailed;
          message += `‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã: ${problems}\n`;
        }
        if (surveyAnswers?.child_parent_involvement) {
          message += `‚Ä¢ –ö—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è: ${surveyAnswers.child_parent_involvement}\n`;
        }
      } else {
        if (surveyAnswers?.age_group) {
          message += `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞: ${surveyAnswers.age_group}\n`;
        }
        if (surveyAnswers?.stress_level) {
          message += `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞: ${surveyAnswers.stress_level}/10\n`;
        }
        if (surveyAnswers?.current_problems) {
          const problems = Array.isArray(surveyAnswers.current_problems) 
            ? surveyAnswers.current_problems.join(', ')
            : surveyAnswers.current_problems;
          message += `‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã: ${problems}\n`;
        }
        if (surveyAnswers?.occupation) {
          message += `‚Ä¢ –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${surveyAnswers.occupation}\n`;
        }
        if (surveyAnswers?.time_commitment) {
          message += `‚Ä¢ –í—Ä–µ–º—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏: ${surveyAnswers.time_commitment}\n`;
        }
      }

      // –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
      message += `\nüìä *–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:*\n`;
      message += `‚Ä¢ –°–µ–≥–º–µ–Ω—Ç: ${analysisResult?.segment || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}\n`;
      message += `‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª: ${analysisResult?.scores?.total || 0}/100\n`;

      // –í—Ä–µ–º—è
      message += `\nüïê *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
      await this.bot.telegram.sendMessage(this.adminId, message, {
        parse_mode: 'Markdown',
        ...Markup.inlineKeyboard([
          [Markup.button.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `https://t.me/${userInfo?.username || 'user'}`)],
          [Markup.button.callback('üìä –ü–æ–ª–Ω–∞—è –∞–Ω–∫–µ—Ç–∞', `admin_full_survey_${userInfo?.telegram_id}`)]
        ])
      });

      console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: ${userInfo?.telegram_id}`);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', error);
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ª–∏–¥–µ
   */
  generateLeadNotification(userData) {
    const { userInfo, analysisResult, surveyAnswers, surveyType } = userData;
    const isChildFlow = surveyType === 'child';
    
    // –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤
    const segmentEmojis = {
      'HOT_LEAD': 'üî•',
      'WARM_LEAD': '‚≠ê',
      'COLD_LEAD': '‚ùÑÔ∏è',
      'NURTURE_LEAD': 'üå±'
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    const segment = analysisResult?.segment || 'UNKNOWN';
    const emoji = segmentEmojis[segment] || '‚ùì';
    const score = analysisResult?.scores?.total || 0;

    let message = `${emoji} *–ù–û–í–´–ô –õ–ò–î ${segment}*\n\n`;
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    message += `üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:*\n`;
    message += `‚Ä¢ –ò–º—è: ${userInfo?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n`;
    message += `‚Ä¢ Username: ${userInfo?.username ? '@' + userInfo.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
    message += `‚Ä¢ Telegram ID: \`${userInfo?.telegram_id}\`\n`;
    message += `‚Ä¢ –¢–∏–ø –∞–Ω–∫–µ—Ç—ã: ${isChildFlow ? 'üë∂ –î–µ—Ç—Å–∫–∞—è' : 'üë®‚Äçüíº –í–∑—Ä–æ—Å–ª–∞—è'}\n\n`;

    // –°–∫–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑
    message += `üìä *–ê–Ω–∞–ª–∏–∑ VERSE:*\n`;
    message += `‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª: ${score}/100\n`;
    if (analysisResult?.scores) {
      message += `‚Ä¢ –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${analysisResult.scores.urgency}/100\n`;
      message += `‚Ä¢ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${analysisResult.scores.readiness}/100\n`;
      message += `‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${analysisResult.scores.fit}/100\n`;
    }
    message += `\n`;

    // –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
    if (analysisResult?.primaryIssue) {
      const problemDescriptions = {
        'chronic_stress': '–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–µ—Å—Å',
        'anxiety': '–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –∏ –ø–∞–Ω–∏–∫–∞',
        'insomnia': '–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º',
        'breathing_issues': '–ü—Ä–æ–±–ª–µ–º—ã —Å –¥—ã—Ö–∞–Ω–∏–µ–º',
        'high_pressure': '–ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        'hyperactivity': '–ì–∏–ø–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–¥–µ—Ç—Å–∫–∞—è)',
        'separation_anxiety': '–°—Ç—Ä–∞—Ö —Ä–∞–∑–ª—É–∫–∏ (–¥–µ—Ç—Å–∫–∞—è)',
        'sleep_problems': '–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º (–¥–µ—Ç—Å–∫–∞—è)'
      };
      
      const problemDesc = problemDescriptions[analysisResult.primaryIssue] || analysisResult.primaryIssue;
      message += `üéØ *–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞:* ${problemDesc}\n\n`;
    }

    // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    if (segment === 'HOT_LEAD') {
      message += `‚ö° *–°–†–û–ß–ù–û:* –°–≤—è–∑–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤!\n\n`;
    } else if (segment === 'WARM_LEAD') {
      message += `‚è∞ *–°–≤—è–∑–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤*\n\n`;
    }

    // –ö–ª—é—á–µ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∏–∑ –∞–Ω–∫–µ—Ç—ã
    message += `üìù *–ö–ª—é—á–µ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã:*\n`;
    
    if (isChildFlow) {
      // –î–µ—Ç—Å–∫–∞—è –∞–Ω–∫–µ—Ç–∞
      if (surveyAnswers?.child_age_detail) {
        message += `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞: ${surveyAnswers.child_age_detail}\n`;
      }
      if (surveyAnswers?.child_problems_detailed) {
        const problems = Array.isArray(surveyAnswers.child_problems_detailed) 
          ? surveyAnswers.child_problems_detailed.slice(0, 2).join(', ')
          : surveyAnswers.child_problems_detailed;
        message += `‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã: ${problems}\n`;
      }
      if (surveyAnswers?.child_parent_involvement) {
        message += `‚Ä¢ –ö—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è: ${surveyAnswers.child_parent_involvement}\n`;
      }
    } else {
      // –í–∑—Ä–æ—Å–ª–∞—è –∞–Ω–∫–µ—Ç–∞
      if (surveyAnswers?.stress_level) {
        message += `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞: ${surveyAnswers.stress_level}/10\n`;
      }
      if (surveyAnswers?.current_problems) {
        const problems = Array.isArray(surveyAnswers.current_problems) 
          ? surveyAnswers.current_problems.slice(0, 2).join(', ')
          : surveyAnswers.current_problems;
        message += `‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã: ${problems}\n`;
      }
      if (surveyAnswers?.occupation) {
        message += `‚Ä¢ –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${surveyAnswers.occupation}\n`;
      }
      if (surveyAnswers?.time_commitment) {
        message += `‚Ä¢ –í—Ä–µ–º—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏: ${surveyAnswers.time_commitment}\n`;
      }
    }

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è
    message += `\nüìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è:*\n`;
    message += `‚Ä¢ –í—Å–µ–≥–æ –ª–∏–¥–æ–≤: ${this.dailyStats.totalLeads}\n`;
    message += `‚Ä¢ üî• –ì–æ—Ä—è—á–∏—Ö: ${this.dailyStats.hotLeads}\n`;
    message += `‚Ä¢ ‚≠ê –¢–µ–ø–ª—ã—Ö: ${this.dailyStats.warmLeads}\n`;
    message += `‚Ä¢ ‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã—Ö: ${this.dailyStats.coldLeads}\n`;

    // –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è
    message += `\nüïê *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`;

    return message;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  generateAdminKeyboard(userData) {
    const userTelegramId = userData.userInfo?.telegram_id;
    const username = userData.userInfo?.username;
    const segment = userData.analysisResult?.segment;

    const buttons = [];

    // –ö–Ω–æ–ø–∫–∞ —Å–≤—è–∑–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if (username) {
      buttons.push([Markup.button.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `https://t.me/${username}`)]);
    }

    // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ–≥–º–µ–Ω—Ç–∞
    if (segment === 'HOT_LEAD') {
      buttons.push([
        Markup.button.callback('üî• –°—Ä–æ—á–Ω—ã–π –∑–≤–æ–Ω–æ–∫', `admin_urgent_call_${userTelegramId}`),
        Markup.button.callback('üìÖ –ó–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', `admin_book_consultation_${userTelegramId}`)
      ]);
    } else if (segment === 'WARM_LEAD') {
      buttons.push([
        Markup.button.callback('üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å', `admin_call_${userTelegramId}`),
        Markup.button.callback('üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', `admin_send_materials_${userTelegramId}`)
      ]);
    } else {
      buttons.push([
        Markup.button.callback('üìß –î–æ–±–∞–≤–∏—Ç—å –≤ —Ä–∞—Å—Å—ã–ª–∫—É', `admin_add_newsletter_${userTelegramId}`)
      ]);
    }

    // –°–ª—É–∂–µ–±–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    buttons.push([
      Markup.button.callback('üìä –ü–æ–ª–Ω–∞—è –∞–Ω–∫–µ—Ç–∞', `admin_full_survey_${userTelegramId}`),
      Markup.button.callback('üè∑Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–µ–≥–º–µ–Ω—Ç', `admin_change_segment_${userTelegramId}`)
    ]);

    buttons.push([
      Markup.button.callback('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ', `admin_mark_processed_${userTelegramId}`)
    ]);

    return Markup.inlineKeyboard(buttons);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ä–æ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –≥–æ—Ä—è—á–∏—Ö –ª–∏–¥–æ–≤
   */
  async sendUrgentNotification(userData) {
    try {
      const urgentMessage = `üö® *–°–†–û–ß–ù–´–ô –ì–û–†–Ø–ß–ò–ô –õ–ò–î!*\n\n` +
        `üë§ ${userData.userInfo?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}\n` +
        `üí¨ ${userData.userInfo?.username ? '@' + userData.userInfo.username : '–ë–µ–∑ username'}\n` +
        `üìû ID: \`${userData.userInfo?.telegram_id}\`\n\n` +
        `‚ö° *–¢—Ä–µ–±—É–µ—Ç —Å–≤—è–∑–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤!*\n` +
        `üéØ –ë–∞–ª–ª: ${userData.analysisResult?.scores?.total || 0}/100\n\n` +
        `üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ #${this.dailyStats.hotLeads}`;

      await this.bot.telegram.sendMessage(this.adminId, urgentMessage, {
        parse_mode: 'Markdown',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üî• –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ä–æ—á–Ω–æ', `admin_urgent_process_${userData.userInfo?.telegram_id}`)],
          [Markup.button.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å —Å–µ–π—á–∞—Å', `https://t.me/${userData.userInfo?.username || 'user'}`)]
        ])
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ä–æ—á–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  async handleAdminCallback(ctx, action, targetUserId) {
    try {
      switch (action) {
        case 'urgent_call':
          await ctx.editMessageText(
            `üî• *–°–†–û–ß–ù–´–ô –ó–í–û–ù–û–ö –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n\n` +
            `‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–û–±—Ä–∞–±–æ—Ç–∫–∞"`,
            { parse_mode: 'Markdown' }
          );
          break;

        case 'book_consultation':
          await ctx.editMessageText(
            `üìÖ *–ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù–ê*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `üìã –î–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n\n` +
            `‚úÖ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –°–≤—è–∑–∞—Ç—å—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏`,
            { parse_mode: 'Markdown' }
          );
          break;

        case 'call':
          await ctx.editMessageText(
            `üìû *–ó–í–û–ù–û–ö –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `‚è∞ –ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n\n` +
            `‚úÖ –°—Ç–∞—Ç—É—Å: –í —Ä–∞–±–æ—Ç–µ`,
            { parse_mode: 'Markdown' }
          );
          break;

        case 'send_materials':
          await ctx.editMessageText(
            `üìß *–ú–ê–¢–ï–†–ò–ê–õ–´ –û–¢–ü–†–ê–í–õ–ï–ù–´*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `üì¶ –í—ã—Å–ª–∞–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n\n` +
            `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–µ–ø–ª—É—é –±–∞–∑—É`,
            { parse_mode: 'Markdown' }
          );
          break;

        case 'add_newsletter':
          await ctx.editMessageText(
            `üìß *–î–û–ë–ê–í–õ–ï–ù –í –†–ê–°–°–´–õ–ö–£*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `üìÆ –ë—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n\n` +
            `‚úÖ –°–µ–≥–º–µ–Ω—Ç: –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –≤–∑—Ä–∞—â–∏–≤–∞–Ω–∏–µ`,
            { parse_mode: 'Markdown' }
          );
          break;

        case 'mark_processed':
          await ctx.editMessageText(
            `‚úÖ *–õ–ò–î –û–ë–†–ê–ë–û–¢–ê–ù*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `üïê –û–±—Ä–∞–±–æ—Ç–∞–Ω: ${new Date().toLocaleString('ru-RU')}\n\n` +
            `üìä –°—Ç–∞—Ç—É—Å: –ó–∞–∫—Ä—ã—Ç`,
            { parse_mode: 'Markdown' }
          );
          break;

        case 'full_survey':
          await this.sendFullSurveyData(ctx, targetUserId);
          break;

        case 'urgent_process':
          await ctx.answerCbQuery('üî• –õ–∏–¥ –≤–∑—è—Ç –≤ —Å—Ä–æ—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É');
          await ctx.editMessageText(
            `üî• *–í –°–†–û–ß–ù–û–ô –û–ë–†–ê–ë–û–¢–ö–ï*\n\n` +
            `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}\n` +
            `‚è∞ –í–∑—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É: ${new Date().toLocaleString('ru-RU')}\n\n` +
            `‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô`,
            { parse_mode: 'Markdown' }
          );
          break;

        default:
          await ctx.answerCbQuery('–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ');
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ admin callback:', error);
      await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è');
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–Ω–∫–µ—Ç–µ
   */
  async sendFullSurveyData(ctx, targetUserId) {
    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      // –ü–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
      const message = `üìã *–ü–û–õ–ù–ê–Ø –ê–ù–ö–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø*\n\n` +
        `üë§ ID: ${targetUserId}\n\n` +
        `üìÑ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏.\n\n` +
        `üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç:\n` +
        `${config.MAIN_BOT_API_URL}/admin/leads/${targetUserId}`;

      await ctx.reply(message, { parse_mode: 'Markdown' });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª–Ω–æ–π –∞–Ω–∫–µ—Ç—ã:', error);
      await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
   */
  async sendDailySummary() {
    if (!this.adminId) return;

    try {
      const message = `üìä *–ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê*\n\n` +
        `üìÖ –î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}\n\n` +
        `üë• *–í—Å–µ–≥–æ –ª–∏–¥–æ–≤ –∑–∞ –¥–µ–Ω—å:* ${this.dailyStats.totalLeads}\n\n` +
        `üî• –ì–æ—Ä—è—á–∏—Ö –ª–∏–¥–æ–≤: ${this.dailyStats.hotLeads}\n` +
        `‚≠ê –¢–µ–ø–ª—ã—Ö –ª–∏–¥–æ–≤: ${this.dailyStats.warmLeads}\n` +
        `‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω—ã—Ö –ª–∏–¥–æ–≤: ${this.dailyStats.coldLeads}\n` +
        `üå± –î–ª—è –≤–∑—Ä–∞—â–∏–≤–∞–Ω–∏—è: ${this.dailyStats.nurtureLeads}\n\n` +
        `üí° *–ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –≥–æ—Ä—è—á–∏–µ –ª–∏–¥—ã:* ${this.dailyStats.totalLeads > 0 ? Math.round((this.dailyStats.hotLeads / this.dailyStats.totalLeads) * 100) : 0}%\n\n` +
        `üìà –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞ –∑–∞ –¥–µ–Ω—å!`;

      await this.bot.telegram.sendMessage(this.adminId, message, {
        parse_mode: 'Markdown',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'admin_detailed_stats')],
          [Markup.button.callback('üìã –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', 'admin_export_data')]
        ])
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–≤–æ–¥–∫–∏:', error);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
   */
  updateDailyStats(segment) {
    this.dailyStats.totalLeads++;
    
    switch (segment) {
      case 'HOT_LEAD':
        this.dailyStats.hotLeads++;
        break;
      case 'WARM_LEAD':
        this.dailyStats.warmLeads++;
        break;
      case 'COLD_LEAD':
        this.dailyStats.coldLeads++;
        break;
      case 'NURTURE_LEAD':
        this.dailyStats.nurtureLeads++;
        break;
    }
  }

  /**
   * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –Ω–æ–≤—ã–π –¥–µ–Ω—å
   */
  resetDailyStatsIfNeeded() {
    const today = new Date().toDateString();
    
    if (this.dailyStats.lastReset !== today) {
      this.dailyStats = {
        totalLeads: 0,
        hotLeads: 0,
        warmLeads: 0,
        coldLeads: 0,
        nurtureLeads: 0,
        lastReset: today
      };
    }
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  toggleNotifications(enabled) {
    this.enableNotifications = enabled;
    console.log(`üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${enabled ? '–í–ö–õ–Æ–ß–ï–ù–´' : '–í–´–ö–õ–Æ–ß–ï–ù–´'}`);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  getStats() {
    return {
      daily_stats: this.dailyStats,
      admin_id: this.adminId,
      notifications_enabled: this.enableNotifications,
      last_updated: new Date().toISOString()
    };
  }
}

module.exports = AdminNotificationSystem;
